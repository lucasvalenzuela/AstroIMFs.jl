var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AstroIMFs","category":"page"},{"location":"#AstroIMFs","page":"Home","title":"AstroIMFs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AstroIMFs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AstroIMFs]","category":"page"},{"location":"#AstroIMFs.AbstractIMF","page":"Home","title":"AstroIMFs.AbstractIMF","text":"abstract type AbstractIMF end\n\nThe abstract type for stellar initial mass functions.\n\nThe following functions can be used on objects of this supertype:\n\neval_by_mass\neval_by_num\nintegrate_eval_by_mass\nintegrate_eval_by_num\nmass_in_massinterval\nnstars_in_massinterval\n\nFor developers\n\nThe following methods have to be defined for subtypes:\n\neval_by_mass\neval_by_num\n\n\n\n\n\n","category":"type"},{"location":"#AstroIMFs.PowerlawIMF","page":"Home","title":"AstroIMFs.PowerlawIMF","text":"struct PowerlawIMF{M,S,T} <: AbstractIMF\n    massmin::M\n    massmax::M\n    slopemasses::Vector{M}\n    slopes::Vector{S}\n    slopenorms::Vector{T}\nend\n\nA powerlaw IMF with multiple separate powerlaw sections ranging the mass range from massmin to massmax.\n\nThis IMF can also handle unitful quantities, i.e. using solar masses as units.\n\nAttributes\n\nslopemasses: vector of edge masses between the slopes of length N, where the last element is equal to massmin (and the first element must be smaller or equal to massmax)\nslopes: vector of the powerlaw segment slopes\nslopenorms: vector of normalization values for the powerlaw segments to force the integral to be 1\n\nExamples\n\n# for a Chabrier powerlaw IMF:\nimf_chabrier = PowerlawIMF(0.1, 100.0, [1, .3, .1], [1.3, 0.8, 0.2], [0.241367, 0.241367, 0.497056])\n\n\n\n\n\n","category":"type"},{"location":"#AstroIMFs.eval_by_mass-Union{Tuple{T}, Tuple{S}, Tuple{M}, Tuple{PowerlawIMF{M, S, T}, Number}} where {M, S, T}","page":"Home","title":"AstroIMFs.eval_by_mass","text":"eval_by_mass(imf::PowerlawIMF, m::Number)\n\nReturns the IMF probability density function evaluated at the mass m.\n\nIntegrating this over all masses results in 1.\n\n\n\n\n\n","category":"method"},{"location":"#AstroIMFs.eval_by_num-Union{Tuple{T}, Tuple{S}, Tuple{M}, Tuple{PowerlawIMF{M, S, T}, Number}} where {M, S, T}","page":"Home","title":"AstroIMFs.eval_by_num","text":"eval_by_num(imf::PowerlawIMF, m::Number)\n\nReturns the IMF probability density function divided by the mass evaluated at the mass m.\n\nMultiplying the integral of this over a mass interval with the total mass of stars that the IMF applies to results in the expected number of stars within that interval.\n\n\n\n\n\n","category":"method"},{"location":"#AstroIMFs.integrate_eval_by_mass-Tuple{AbstractIMF, Any}","page":"Home","title":"AstroIMFs.integrate_eval_by_mass","text":"integrate_eval_by_mass(imf::PowerlawIMF, mrange)\n\nReturn the integral over eval_by_mass for the mass range mrange as a Tuple or AbstractArray.\n\n\n\n\n\n","category":"method"},{"location":"#AstroIMFs.integrate_eval_by_mass-Tuple{PowerlawIMF, Any}","page":"Home","title":"AstroIMFs.integrate_eval_by_mass","text":"integrate_eval_by_num(imf::PowerlawIMF, mrange)\n\nReturn the integral over eval_by_mass for the mass range mrange as a Tuple or AbstractArray.\n\n\n\n\n\n","category":"method"},{"location":"#AstroIMFs.integrate_eval_by_num-Tuple{AbstractIMF, Any}","page":"Home","title":"AstroIMFs.integrate_eval_by_num","text":"integrate_eval_by_num(imf::PowerlawIMF, mrange)\n\nReturn the integral over eval_by_num for the mass range mrange as a Tuple or AbstractArray.\n\n\n\n\n\n","category":"method"},{"location":"#AstroIMFs.mass_in_massinterval-Tuple{AbstractIMF, Number, Any}","page":"Home","title":"AstroIMFs.mass_in_massinterval","text":"mass_in_massinterval(imf::AbstractIMF, mtot::Number, mrange)\n\nReturn the expected total mass found within the mass range mrange for the imf of mass mtot.\n\nThe mass range is given as a Tuple or AbstractArray.\n\n\n\n\n\n","category":"method"},{"location":"#AstroIMFs.nstars_in_massinterval-Tuple{AbstractIMF, Number, Any}","page":"Home","title":"AstroIMFs.nstars_in_massinterval","text":"nstars_in_massinterval(imf::AbstractIMF, mtot::Number, mrange)\n\nReturn the expected total number of stars found within the mass range mrange for the imf of mass mtot.\n\nThe mass range is given as a Tuple or AbstractArray.\n\n\n\n\n\n","category":"method"}]
}
